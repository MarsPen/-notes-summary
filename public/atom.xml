<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  <subtitle>满招损 谦受益</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.studyfe.cn/"/>
  <updated>2021-03-15T05:23:00.500Z</updated>
  <id>https://www.studyfe.cn/</id>
  
  <author>
    <name>任博</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>浏览器中的 Event Loop</title>
    <link href="https://www.studyfe.cn/2021/01/25/browser/eventloop/"/>
    <id>https://www.studyfe.cn/2021/01/25/browser/eventloop/</id>
    <published>2021-01-25T13:20:12.000Z</published>
    <updated>2021-03-15T05:23:00.500Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言 &quot;&gt;&lt;/a&gt;前言 &lt;hr&gt;&lt;/h3&gt;&lt;p&gt;网上很多文章都在讨论事件循环 (Event Loop)，但是看了很多文章之后还是不知道 Event Loop
        
      
    
    </summary>
    
      <category term="浏览器中的 Event Loop" scheme="https://www.studyfe.cn/categories/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84-Event-Loop/"/>
    
    
      <category term="浏览器" scheme="https://www.studyfe.cn/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>小程序框架跨端框架</title>
    <link href="https://www.studyfe.cn/2021/01/14/mini/principle03/"/>
    <id>https://www.studyfe.cn/2021/01/14/mini/principle03/</id>
    <published>2021-01-14T15:35:09.000Z</published>
    <updated>2021-01-17T16:17:00.474Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;跨端框架&quot;&gt;&lt;a href=&quot;#跨端框架&quot; class=&quot;headerlink&quot; title=&quot;跨端框架&quot;&gt;&lt;/a&gt;跨端框架&lt;hr&gt;&lt;/h3&gt;&lt;p&gt;到2021年前端的跨端项目已经达到一个瓶颈期，从原生的 RN、Weex、Flutter
        
      
    
    </summary>
    
      <category term="小程序" scheme="https://www.studyfe.cn/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="https://www.studyfe.cn/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://www.studyfe.cn/2020/12/20/mini/wcsc/"/>
    <id>https://www.studyfe.cn/2020/12/20/mini/wcsc/</id>
    <published>2020-12-20T07:22:14.945Z</published>
    <updated>2020-12-20T07:23:21.765Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;pre class=&quot;line-numbers language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; BASE_DEVICE_WIDTH &lt;span class=&quot;token
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://www.studyfe.cn/2020/12/20/mini/wcss/"/>
    <id>https://www.studyfe.cn/2020/12/20/mini/wcss/</id>
    <published>2020-12-20T07:19:59.109Z</published>
    <updated>2020-12-20T07:22:43.677Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;pre class=&quot;line-numbers language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://www.studyfe.cn/2020/12/20/mini/waservice/"/>
    <id>https://www.studyfe.cn/2020/12/20/mini/waservice/</id>
    <published>2020-12-20T06:18:37.599Z</published>
    <updated>2020-12-20T10:32:50.615Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;pre class=&quot;line-numbers language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; __wxLibrary &lt;span class=&quot;token
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://www.studyfe.cn/2020/12/20/mini/wawebview/"/>
    <id>https://www.studyfe.cn/2020/12/20/mini/wawebview/</id>
    <published>2020-12-20T06:15:46.967Z</published>
    <updated>2020-12-20T10:32:35.795Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;pre class=&quot;line-numbers language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;// WAWebview.js
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小程序之启动流程</title>
    <link href="https://www.studyfe.cn/2020/12/20/mini/principle02/"/>
    <id>https://www.studyfe.cn/2020/12/20/mini/principle02/</id>
    <published>2020-12-20T04:32:09.000Z</published>
    <updated>2021-01-17T16:17:09.011Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在说小程序启动流程分析之前我们先来了解下其他相关相关知识，也是官方文档提到的&lt;/p&gt;
&lt;h3 id=&quot;运行机制&quot;&gt;&lt;a href=&quot;#运行机制&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="小程序" scheme="https://www.studyfe.cn/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="https://www.studyfe.cn/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>小程序架构原理</title>
    <link href="https://www.studyfe.cn/2020/12/12/mini/principle01/"/>
    <id>https://www.studyfe.cn/2020/12/12/mini/principle01/</id>
    <published>2020-12-12T04:32:09.000Z</published>
    <updated>2021-01-17T16:17:22.256Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;hr&gt;&lt;/h3&gt;&lt;p&gt;​小程序的主要开发语言是 JavaScript
        
      
    
    </summary>
    
      <category term="小程序" scheme="https://www.studyfe.cn/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="https://www.studyfe.cn/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>flutter 之 dart 基础语法</title>
    <link href="https://www.studyfe.cn/2019/12/15/flutter/library-flutter-dart/"/>
    <id>https://www.studyfe.cn/2019/12/15/flutter/library-flutter-dart/</id>
    <published>2019-12-15T12:12:06.000Z</published>
    <updated>2019-12-24T14:49:40.721Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;dart 作为 flutter 选用的基础语言，具有一定的优势。下面我们来简单的了解一下这门语言。&lt;/p&gt;
&lt;h3 id=&quot;什么是-dart&quot;&gt;&lt;a href=&quot;#什么是-dart&quot; class=&quot;headerlink&quot; title=&quot;什么是 dart &quot;&gt;&lt;/a&gt;什么是
        
      
    
    </summary>
    
      <category term="Flutter" scheme="https://www.studyfe.cn/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="https://www.studyfe.cn/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>基本概念</title>
    <link href="https://www.studyfe.cn/2019/11/25/datastructure/library-array/"/>
    <id>https://www.studyfe.cn/2019/11/25/datastructure/library-array/</id>
    <published>2019-11-25T13:20:12.000Z</published>
    <updated>2021-01-30T10:56:13.617Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;基本概念和术语-🚩&quot;&gt;&lt;a href=&quot;#基本概念和术语-🚩&quot; class=&quot;headerlink&quot; title=&quot;基本概念和术语 🚩&quot;&gt;&lt;/a&gt;基本概念和术语 🚩&lt;hr&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;数据🍎&lt;/strong&gt;
        
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://www.studyfe.cn/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构与算法" scheme="https://www.studyfe.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>webpack 使用总结</title>
    <link href="https://www.studyfe.cn/2019/11/20/webpack/library-webpack01/"/>
    <id>https://www.studyfe.cn/2019/11/20/webpack/library-webpack01/</id>
    <published>2019-11-20T12:06:12.000Z</published>
    <updated>2019-12-05T07:20:46.839Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;hr&gt;&lt;/h2&gt;&lt;p&gt;在前端的历史车轮中出现过很多优秀的构建工具，例如 npm
        
      
    
    </summary>
    
      <category term="webpack" scheme="https://www.studyfe.cn/categories/webpack/"/>
    
    
      <category term="webpack" scheme="https://www.studyfe.cn/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>React 原理之 hook</title>
    <link href="https://www.studyfe.cn/2019/11/09/react/library-react-hook/"/>
    <id>https://www.studyfe.cn/2019/11/09/react/library-react-hook/</id>
    <published>2019-11-09T11:12:35.000Z</published>
    <updated>2019-11-14T08:46:04.631Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;什么是-hook&quot;&gt;&lt;a href=&quot;#什么是-hook&quot; class=&quot;headerlink&quot; title=&quot;什么是 hook&quot;&gt;&lt;/a&gt;什么是 hook&lt;hr&gt;&lt;/h3&gt;&lt;p&gt;hook 意为钩子，当代码执行特定的时期时会自动调用 hook
        
      
    
    </summary>
    
      <category term="react" scheme="https://www.studyfe.cn/categories/react/"/>
    
    
      <category term="react" scheme="https://www.studyfe.cn/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>React 原理之 setState 执行机制</title>
    <link href="https://www.studyfe.cn/2019/10/09/react/library-react-state/"/>
    <id>https://www.studyfe.cn/2019/10/09/react/library-react-state/</id>
    <published>2019-10-09T13:10:35.000Z</published>
    <updated>2019-11-19T10:32:50.798Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;提到 react 的 setState 大家应该都很熟悉，那么下面我们以实际开发中遇到的几个问题，来引入 setState 的机制&lt;/p&gt;
&lt;h3 id=&quot;问题集合&quot;&gt;&lt;a href=&quot;#问题集合&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="react" scheme="https://www.studyfe.cn/categories/react/"/>
    
    
      <category term="react" scheme="https://www.studyfe.cn/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>React 原理之 FiberRoot 调度过程</title>
    <link href="https://www.studyfe.cn/2019/10/06/react/library-react-fiber02/"/>
    <id>https://www.studyfe.cn/2019/10/06/react/library-react-fiber02/</id>
    <published>2019-10-06T11:20:25.000Z</published>
    <updated>2019-10-31T15:56:25.632Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;上篇文章我们对 fiber 的创建做了大概的了解，并且还引入了 scheduleWork 函数。scheduleWork 函数实际执行了如下几个重要的函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;checkForNestedUpdates 判断是否有无限循环的
        
      
    
    </summary>
    
      <category term="react" scheme="https://www.studyfe.cn/categories/react/"/>
    
    
      <category term="react" scheme="https://www.studyfe.cn/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>React 原理之 FiberRoot 构建过程</title>
    <link href="https://www.studyfe.cn/2019/10/04/react/library-react-fiber01/"/>
    <id>https://www.studyfe.cn/2019/10/04/react/library-react-fiber01/</id>
    <published>2019-10-04T05:20:25.000Z</published>
    <updated>2019-10-17T10:25:07.123Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;fiber 是当前整个 react 核心部分，其中包含了大量的计算机知识。如果阅读 react 的源码能让人感觉到无力。&lt;/p&gt;
&lt;p&gt;每次版本更新，核心部分的函数总是要动那么一动。从 15, 到 16 到 16.8、16.9 到现在的 16.10，包括现在已经改版的
        
      
    
    </summary>
    
      <category term="react" scheme="https://www.studyfe.cn/categories/react/"/>
    
    
      <category term="react" scheme="https://www.studyfe.cn/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>React 之生命周期使用</title>
    <link href="https://www.studyfe.cn/2019/10/02/react/library-react-lifecycle/"/>
    <id>https://www.studyfe.cn/2019/10/02/react/library-react-lifecycle/</id>
    <published>2019-10-02T05:20:25.000Z</published>
    <updated>2019-10-09T10:03:14.407Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;和 Vue 一样 React 也会有对应的生命周期钩子函数，在相对应的钩子函数内，分别在不同时机处理相对应的逻辑，贴一张来至官网&lt;a href=&quot;http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/&quot;
        
      
    
    </summary>
    
      <category term="react" scheme="https://www.studyfe.cn/categories/react/"/>
    
    
      <category term="react" scheme="https://www.studyfe.cn/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>React 原理之 JSX 转换</title>
    <link href="https://www.studyfe.cn/2019/10/01/react/library-react-jsx/"/>
    <id>https://www.studyfe.cn/2019/10/01/react/library-react-jsx/</id>
    <published>2019-10-01T10:06:25.000Z</published>
    <updated>2019-10-14T10:16:33.708Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;JSX-转换&quot;&gt;&lt;a href=&quot;#JSX-转换&quot; class=&quot;headerlink&quot; title=&quot;JSX 转换&quot;&gt;&lt;/a&gt;JSX 转换&lt;/h2&gt;&lt;p&gt;在我们写 react 组件的时候都会去写 jsx，那么 jsx 在 react
        
      
    
    </summary>
    
      <category term="react" scheme="https://www.studyfe.cn/categories/react/"/>
    
    
      <category term="react" scheme="https://www.studyfe.cn/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>vue 原理之keep-alive</title>
    <link href="https://www.studyfe.cn/2019/09/22/vue/vuekeepalive/"/>
    <id>https://www.studyfe.cn/2019/09/22/vue/vuekeepalive/</id>
    <published>2019-09-22T12:55:12.000Z</published>
    <updated>2019-09-28T08:46:42.043Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在我们的平时开发工作中，有很多组件没有必要多次初始化，通过缓存组件的状态减少性能上的开销。而 vue 的组件缓存优化则使用内置组件 &lt;keep-alive&gt;&lt;/keep-alive&gt;&lt;/p&gt;
&lt;h3 id=&quot;基本用法&quot;&gt;&lt;a href=&quot;#基本用法&quot;
        
      
    
    </summary>
    
      <category term="vue" scheme="https://www.studyfe.cn/categories/vue/"/>
    
    
      <category term="vue" scheme="https://www.studyfe.cn/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue 原理之生命周期</title>
    <link href="https://www.studyfe.cn/2019/09/21/vue/vuelifecycle/"/>
    <id>https://www.studyfe.cn/2019/09/21/vue/vuelifecycle/</id>
    <published>2019-09-21T05:50:28.000Z</published>
    <updated>2019-10-08T07:36:21.434Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;每一个 vue 的实例在创建的时候都经过一系列的初始化操作，在每一个阶段都会有相对应的生命周期钩子函数，来在特定的场景实现一些功能&lt;/p&gt;
&lt;h3 id=&quot;生命周期方法&quot;&gt;&lt;a href=&quot;#生命周期方法&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="vue" scheme="https://www.studyfe.cn/categories/vue/"/>
    
    
      <category term="vue" scheme="https://www.studyfe.cn/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue 原理之组件化</title>
    <link href="https://www.studyfe.cn/2019/09/21/vue/vuecomponents/"/>
    <id>https://www.studyfe.cn/2019/09/21/vue/vuecomponents/</id>
    <published>2019-09-21T02:50:28.000Z</published>
    <updated>2019-09-29T04:06:29.855Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.studyfe.cn/2019/09/21/vue/vuelifecycle/&quot;&gt;生命周期&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="vue" scheme="https://www.studyfe.cn/categories/vue/"/>
    
    
      <category term="vue" scheme="https://www.studyfe.cn/tags/vue/"/>
    
  </entry>
  
</feed>
